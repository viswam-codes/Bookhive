<%- include('../partials/userHeader.ejs') %>
<style>
    .wallet-container {
    padding: 20px;
    background-color: #f9f9f9;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.wallet-container h2 {
    margin-bottom: 20px;
    color: #333;
    text-align: center;
}

.wallet-balance {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 20px;
    font-size: 1.2em;
}

.wallet-balance span {
    margin: 0 10px;
}

.transaction-history {
    margin-top: 20px;
}

.transaction-history h3 {
    margin-bottom: 10px;
    color: #333;
}

.transaction-table {
    width: 100%;
    border-collapse: collapse;
}

.transaction-table th, .transaction-table td {
    padding: 10px;
    text-align: left;
    border-bottom: 1px solid #ddd;
}

.transaction-table th {
    background-color: #f2f2f2;
    color: #333;
}

.transaction-table tr:hover {
    background-color: #f1f1f1;
}

.transaction-table td {
    color: #555;
}

</style>
<!-- Modal for resetting password -->
<div class="modal fade" id="resetPasswordModal" tabindex="-1" aria-labelledby="resetPasswordModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="resetPasswordModalLabel">Reset Password</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="resetPasswordForm">
                    <div class="mb-3">
                        <label for="currentPassword" class="form-label">Current Password</label>
                        <input type="password" class="form-control" id="currentPassword" required>
                        <div class="error-message text-danger" id="currentPasswordError"></div>
                    </div>
                    <div class="mb-3">
                        <label for="newPassword" class="form-label">New Password</label>
                        <input type="password" class="form-control" id="newPassword" required>
                        <div class="error-message text-danger" id="newPasswordError"></div>
                    </div>
                    <div class="mb-3">
                        <label for="confirmPassword" class="form-label">Confirm Password</label>
                        <input type="password" class="form-control" id="confirmPassword" required>
                        <div class="error-message text-danger" id="confirmPasswordError"></div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="validateForm()">Confirm</button>
            </div>
        </div>
    </div>
</div>


 <!-- Modal for adding address -->
<div class="modal fade" id="addAddressModal" tabindex="-1" aria-labelledby="addAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addAddressModalLabel">Add Address</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addAddressForm">
                    <div class="mb-3">
                        <label for="houseName" class="form-label">House Name:</label>
                        <input type="text" class="form-control" id="houseName" required>
                        <div id="houseNameError" class="error-message text-danger"></div>
                    </div>
                    <div class="mb-3">
                        <label for="street" class="form-label">Street:</label>
                        <input type="text" class="form-control" id="street" required>
                        <div id="streetError" class="error-message text-danger"></div>
                    </div>
                    <div class="mb-3">
                        <label for="city" class="form-label">City:</label>
                        <input type="text" class="form-control" id="city" required>
                        <div id="cityError" class="error-message text-danger"></div>
                    </div>
                    <div class="mb-3">
                        <label for="state" class="form-label">State:</label>
                        <input type="text" class="form-control" id="state" required>
                        <div id="stateError" class="error-message text-danger"></div>
                    </div>
                    <div class="mb-3">
                        <label for="country" class="form-label">Country:</label>
                        <input type="text" class="form-control" id="country" required>
                        <div id="countryError" class="error-message text-danger"></div>
                    </div>
                    <div class="mb-3">
                        <label for="postalCode" class="form-label">Postal Code:</label>
                        <input type="text" class="form-control" id="postalCode" required>
                        <div id="postalCodeError" class="error-message text-danger"></div>
                    </div>
                    <div class="mb-3">
                        <label for="phoneNo" class="form-label">Phone No:</label>
                        <input type="text" class="form-control" id="phoneNo" required>
                        <div id="phoneNoError" class="error-message text-danger"></div>
                    </div>
                    <div class="mb-3">
                        <label for="addressType" class="form-label">Address Type:</label><br>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="addressType" id="office" value="office">
                            <label class="form-check-label" for="office">Office</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="addressType" id="home" value="home">
                            <label class="form-check-label" for="home">Home</label>
                        </div>
                        <div id="addressTypeError" class="error-message text-danger"></div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="validateAddress()">Save Address</button>
            </div>
        </div>
    </div>
</div>


<!-- Modal for Editing Addresses -->
<div class="modal fade" id="editAddressModal" tabindex="-1" aria-labelledby="editAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editAddressModalLabel">Edit Address</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="addressId">
                <form id="editAddressForm">
                    <div class="mb-3">
                        <label for="editHouseName" class="form-label">House Name:</label>
                        <input type="text" class="form-control" id="editHouseName">
                    </div>
                    <div class="mb-3">
                        <label for="editStreet" class="form-label">Street:</label>
                        <input type="text" class="form-control" id="editStreet">
                    </div>
                    <div class="mb-3">
                        <label for="editCity" class="form-label">City:</label>
                        <input type="text" class="form-control" id="editCity">
                    </div>
                    <div class="mb-3">
                        <label for="editState" class="form-label">State:</label>
                        <input type="text" class="form-control" id="editState">
                    </div>
                    <div class="mb-3">
                        <label for="editCountry" class="form-label">Country:</label>
                        <input type="text" class="form-control" id="editCountry">
                    </div>
                    <div class="mb-3">
                        <label for="editPostalCode" class="form-label">Postal Code:</label>
                        <input type="text" class="form-control" id="editPostalCode">
                    </div>
                    <div class="mb-3">
                        <label for="editPhoneNo" class="form-label">Phone No:</label>
                        <input type="text" class="form-control" id="editPhoneNo">
                    </div>
                    <div class="mb-3">
                        <label for="editAddressType" class="form-label">Address Type:</label><br>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="editAddressType" id="editOffice" value="office">
                            <label class="form-check-label" for="editOffice">Office</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="editAddressType" id="editHome" value="home">
                            <label class="form-check-label" for="editHome">Home</label>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="updateAddress()">Save Changes</button>
            </div>
        </div>
    </div>
</div>



<div class="mobile-header-active mobile-header-wrapper-style">
    <div class="mobile-header-wrapper-inner">
        <div class="mobile-header-top">
            <div class="mobile-header-logo">
                <a href="index.html"><img src="user_assets/imgs/theme/logo.svg" alt="logo"></a>
            </div>
            <div class="mobile-menu-close close-style-wrap close-style-position-inherit">
                <button class="close-style search-close">
                    <i class="icon-top"></i>
                    <i class="icon-bottom"></i>
                </button>
            </div>
        </div>
        <div class="mobile-header-content-area">
            <div class="mobile-search search-style-3 mobile-header-border">
                <form action="#">
                    <input type="text" placeholder="Search for items…">
                    <button type="submit"><i class="fi-rs-search"></i></button>
                </form>
            </div>
            <div class="mobile-menu-wrap mobile-header-border">
                <div class="main-categori-wrap mobile-header-border">
                    <a class="categori-button-active-2" href="#">
                        <span class="fi-rs-apps"></span> Browse Categories
                    </a>
                    <div class="categori-dropdown-wrap categori-dropdown-active-small">
                        <ul>
                            <li><a href="shop-grid-right.html"><i class="evara-font-dress"></i>Women's Clothing</a></li>
                            <li><a href="shop-grid-right.html"><i class="evara-font-tshirt"></i>Men's Clothing</a></li>
                            <li> <a href="shop-grid-right.html"><i class="evara-font-smartphone"></i> Cellphones</a></li>
                            <li><a href="shop-grid-right.html"><i class="evara-font-desktop"></i>Computer & Office</a></li>
                            <li><a href="shop-grid-right.html"><i class="evara-font-cpu"></i>Consumer Electronics</a></li>
                            <li><a href="shop-grid-right.html"><i class="evara-font-home"></i>Home & Garden</a></li>
                            <li><a href="shop-grid-right.html"><i class="evara-font-high-heels"></i>Shoes</a></li>
                            <li><a href="shop-grid-right.html"><i class="evara-font-teddy-bear"></i>Mother & Kids</a></li>
                            <li><a href="shop-grid-right.html"><i class="evara-font-kite"></i>Outdoor fun</a></li>
                        </ul>
                    </div>
                </div>
                <!-- mobile menu start -->
                <nav>
                    <ul class="mobile-menu">
                        <li class="menu-item-has-children"><span class="menu-expand"></span><a href="index.html">Home</a>
                            <ul class="dropdown">
                                <li><a href="index.html">Home 1</a></li>
                                <li><a href="index-2.html">Home 2</a></li>
                                <li><a href="index-3.html">Home 3</a></li>
                                <li><a href="index-4.html">Home 4</a></li>
                            </ul>
                        </li>
                        <li class="menu-item-has-children"><span class="menu-expand"></span><a href="shop-grid-right.html">shop</a>
                            <ul class="dropdown">
                                <li><a href="shop-grid-right.html">Shop Grid – Right Sidebar</a></li>
                                <li><a href="shop-grid-left.html">Shop Grid – Left Sidebar</a></li>
                                <li><a href="shop-list-right.html">Shop List – Right Sidebar</a></li>
                                <li><a href="shop-list-left.html">Shop List – Left Sidebar</a></li>
                                <li><a href="shop-fullwidth.html">Shop - Wide</a></li>
                                <li class="menu-item-has-children"><span class="menu-expand"></span><a href="#">Single Product</a>
                                    <ul class="dropdown">
                                        <li><a href="shop-product-right.html">Product – Right Sidebar</a></li>
                                        <li><a href="shop-product-left.html">Product – Left Sidebar</a></li>
                                        <li><a href="shop-product-full.html">Product – No sidebar</a></li>
                                    </ul>
                                </li>
                                <li><a href="shop-filter.html">Shop – Filter</a></li>
                                <li><a href="shop-wishlist.html">Shop – Wishlist</a></li>
                                <li><a href="shop-cart.html">Shop – Cart</a></li>
                                <li><a href="shop-checkout.html">Shop – Checkout</a></li>
                                <li><a href="shop-compare.html">Shop – Compare</a></li>
                            </ul>
                        </li>
                        <li class="menu-item-has-children"><span class="menu-expand"></span><a href="#">Mega menu</a>
                            <ul class="dropdown">
                                <li class="menu-item-has-children"><span class="menu-expand"></span><a href="#">Women's Fashion</a>
                                    <ul class="dropdown">
                                        <li><a href="shop-product-right.html">Dresses</a></li>
                                        <li><a href="shop-product-right.html">Blouses & Shirts</a></li>
                                        <li><a href="shop-product-right.html">Hoodies & Sweatshirts</a></li>
                                        <li><a href="shop-product-right.html">Women's Sets</a></li>
                                    </ul>
                                </li>
                                <li class="menu-item-has-children"><span class="menu-expand"></span><a href="#">Men's Fashion</a>
                                    <ul class="dropdown">
                                        <li><a href="shop-product-right.html">Jackets</a></li>
                                        <li><a href="shop-product-right.html">Casual Faux Leather</a></li>
                                        <li><a href="shop-product-right.html">Genuine Leather</a></li>
                                    </ul>
                                </li>
                                <li class="menu-item-has-children"><span class="menu-expand"></span><a href="#">Technology</a>
                                    <ul class="dropdown">
                                        <li><a href="shop-product-right.html">Gaming Laptops</a></li>
                                        <li><a href="shop-product-right.html">Ultraslim Laptops</a></li>
                                        <li><a href="shop-product-right.html">Tablets</a></li>
                                        <li><a href="shop-product-right.html">Laptop Accessories</a></li>
                                        <li><a href="shop-product-right.html">Tablet Accessories</a></li>
                                    </ul>
                                </li>
                            </ul>
                        </li>
                        <li class="menu-item-has-children"><span class="menu-expand"></span><a href="blog-category-fullwidth.html">Blog</a>
                            <ul class="dropdown">
                                <li><a href="blog-category-grid.html">Blog Category Grid</a></li>
                                <li><a href="blog-category-list.html">Blog Category List</a></li>
                                <li><a href="blog-category-big.html">Blog Category Big</a></li>
                                <li><a href="blog-category-fullwidth.html">Blog Category Wide</a></li>
                                <li class="menu-item-has-children"><span class="menu-expand"></span><a href="#">Single Product Layout</a>
                                    <ul class="dropdown">
                                        <li><a href="blog-post-left.html">Left Sidebar</a></li>
                                        <li><a href="blog-post-right.html">Right Sidebar</a></li>
                                        <li><a href="blog-post-fullwidth.html">No Sidebar</a></li>
                                    </ul>
                                </li>
                            </ul>
                        </li>
                        <li class="menu-item-has-children"><span class="menu-expand"></span><a href="#">Pages</a>
                            <ul class="dropdown">
                                <li><a href="page-about.html">About Us</a></li>
                                <li><a href="page-contact.html">Contact</a></li>
                                <li><a href="page-account.html">My Account</a></li>
                                <li><a href="page-login-register.html">login/register</a></li>
                                <li><a href="page-purchase-guide.html">Purchase Guide</a></li>
                                <li><a href="page-privacy-policy.html">Privacy Policy</a></li>
                                <li><a href="page-terms.html">Terms of Service</a></li>
                                <li><a href="page-404.html">404 Page</a></li>
                            </ul>
                        </li>
                        <li class="menu-item-has-children"><span class="menu-expand"></span><a href="#">Language</a>
                            <ul class="dropdown">
                                <li><a href="#">English</a></li>
                                <li><a href="#">French</a></li>
                                <li><a href="#">German</a></li>
                                <li><a href="#">Spanish</a></li>
                            </ul>
                        </li>
                    </ul>
                </nav>
                <!-- mobile menu end -->
            </div>
            <div class="mobile-header-info-wrap mobile-header-border">
                <div class="single-mobile-header-info mt-30">
                    <a  href="page-contact.html"> Our location </a>
                </div>
                <div class="single-mobile-header-info">
                    <a href="page-login-register.html">Log In / Sign Up </a>
                </div>
                <div class="single-mobile-header-info">
                    <a href="#">(+01) - 2345 - 6789 </a>
                </div>
            </div>
            <div class="mobile-social-icon">
                <h5 class="mb-15 text-grey-4">Follow Us</h5>
                <a href="#"><img src="user_assets/imgs/theme/icons/icon-facebook.svg" alt=""></a>
                <a href="#"><img src="user_assets/imgs/theme/icons/icon-twitter.svg" alt=""></a>
                <a href="#"><img src="user_assets/imgs/theme/icons/icon-instagram.svg" alt=""></a>
                <a href="#"><img src="user_assets/imgs/theme/icons/icon-pinterest.svg" alt=""></a>
                <a href="#"><img src="user_assets/imgs/theme/icons/icon-youtube.svg" alt=""></a>
            </div>
        </div>
    </div>
</div>
<main class="main">
    <div class="page-header breadcrumb-wrap">
        <div class="container">
            <div class="breadcrumb">
                <a href="index.html" rel="nofollow">Home</a>
                <span></span> Pages
                <span></span> Account
            </div>
        </div>
    </div>
    <section class="pt-150 pb-150">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 m-auto">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="dashboard-menu">
                                <ul class="nav flex-column" role="tablist">
                                    <li class="nav-item">
                                        <a class="nav-link active" id="account-detail-tab" data-bs-toggle="tab" href="#account-detail" role="tab" aria-controls="account-detail" aria-selected="true"><i class="fi-rs-user mr-10"></i>Account details</a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link" id="orders-tab" data-bs-toggle="tab" href="#orders" role="tab" aria-controls="orders" aria-selected="false"><i class="fi-rs-shopping-cart-check mr-10"></i>Orders</a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link" id="address-tab" data-bs-toggle="tab" href="#address" role="tab" aria-controls="address" aria-selected="true"><i class="fi-rs-marker mr-10"></i>My Address</a>
                                    </li>
                                    <li class="nav-item">
                                        <a class="nav-link" id="address-tab" data-bs-toggle="tab" href="#wallet" role="tab" aria-controls="address" aria-selected="true"><i class="fi-rs-shopping-bag mr-10"></i>Wallet</a>
                                    </li>
                        
                                   
                                    <li class="nav-item">
                                        <a class="nav-link" href="page-login-register.html"><i class="fi-rs-sign-out mr-10"></i>Logout</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="tab-content dashboard-content">
                
                                <div class="tab-pane fade" id="orders" role="tabpanel" aria-labelledby="orders-tab">
                                    <div class="card">
                                        <div class="card-header">
                                            <h5 class="mb-0">Your Orders</h5>
                                        </div>
                                        <div class="card-body">
                                            <div class="table-responsive">
                                                <table class="table">
                                                    <thead>
                                                        <tr>
                                                            <th>Order</th>
                                                            <th>Date</th>
                                                            <th>Status</th>
                                                            <th>Total</th>
                                                            <th>Actions</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <% if (order && order.length > 0) { %>
                                                            <% order.forEach((orderItem, index) => { %>
                                                                <tr>
                                                                    <td>
                                                                        <% let imageCount = 0; %>
                                                                        <% let allItemsCancelled = true; %>
                                                                        <% orderItem.items.forEach((prod, prodIndex)=> { %>
                                                                            <% if (prod.status !== 'Cancelled') { %>
                                                                                <% allItemsCancelled = false; %>
                                                                            <% } %>
                                                                            <% if(imageCount % 2 === 0 && imageCount !== 0) { %>
                                                                                <br>
                                                                            <% } %>
                                                                            <img src="/uploads/<%= prod.image[0] %>" alt="Product Image" style="max-width: 50px; display: inline-block; margin-right: 10px;">
                                                                            <% imageCount++; %>
                                                                        <% }) %>
                                                                    </td>
                                                                    <td><%= orderItem.orderDate.toDateString() %></td>
                                                                      
                                                                   
                                                                    <td>
                                                                        <% if (allItemsCancelled) { %>
                                                                            Cancelled
                                                                        <% } else { %>
                                                                            <%= orderItem.orderStatus %>
                                                                        <% } %>
                                                                        
                                                                    </td>
                                                                    <td>
                                                                        <%= orderItem.billTotal %> for <%= orderItem.items.length %> item(s)
                                                                    </td>
                                                                    <td>
                                                                        <a href="/orderView?id=<%= orderItem._id %>" class="btn-small d-block">View</a>
                                                                    </td>
                                                                </tr>
                                                            <% }); %>
                                                        <% } else { %>
                                                            <tr>
                                                                <td colspan="5">No orders found</td>
                                                            </tr>
                                                        <% } %>
                                                    </tbody>
                                                    
                                                    
                                                    
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="tab-pane fade " id="address" role="tabpanel" aria-labelledby="address-tab">
                                    <!-- Add Address button -->
                                    <div class="text-end mb-3">
                                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addAddressModal">Add Address</button>
                                    </div>
                                    
                                    <div class="row">
                                        <% user.address.forEach(function(add) { %>
                                        <div class="col-lg-6 mt-15   ">
                                            <div class="card mb-3 mb-lg-0">
                                                <div class="card-header">
                                                    <h5 class="mb-0"><%=add.type %> Address</h5>
                                                </div>
                                                <div class="card-body">
                                                    <address><%=add.houseName%><br> <%=add.street %>,<br> <%=add.city%>,<%=add.postalCode%> <br><%=add.phoneNumber%><br><%=add.state%></address>
                                                    <p><%=add.country %></p>
                                                    <!-- Edit button in address card -->
                                                    <a type="button" class="btn-small" data-bs-toggle="modal" data-bs-target="#editAddressModal" onclick="populateEditForm('<%=add._id%>', '<%=add.houseName%>', '<%=add.street%>', '<%=add.city%>', '<%=add.state%>', '<%=add.country%>', '<%=add.postalCode%>', '<%=add.phoneNumber%>', '<%=add.type%>')">Edit</a>


                                                    <a type="button" class="btn-small ml-15" onclick="confirmDelete('<%=add._id%>')">Delete</a>
                                                </div>
                                            </div>
                                        </div>
                                        <% }); %>
                                    </div>
                                </div>
                                
                                <div class="tab-pane fade active show" id="account-detail" role="tabpanel" aria-labelledby="account-detail-tab">
                                    <div class="card">
                                        <div class="card-header">
                                            <h5>Account Details</h5>
                                        </div>
                                        <div class="card-body">
                                           
                                            <form id="editingForm">
                                                <div class="row">
                                                    <div class="form-group col-md-6">
                                                        <label>Name <span class="required"></span></label>
                                                        <input required="" class="form-control square" name="name" id="name" type="text" value="<%=user.name%>">
                                                    </div>
                                                    <div class="form-group col-md-6">
                                                        <label>Email Address <span class="required">*</span></label>
                                                        <input required="" class="form-control square" name="email" id="email" type="email" value="<%=user.email %>">
                                                    </div>
                                                    <div class="col-md-12">
                                                        <button type="button" class="btn btn-fill-out submit" name="submit" value="Submit" onclick="saveUser()">Save</button>
                                                       
                                                    </div>
                                                </div>
                                            </form>
                                            
                                        </div>      
                            </div>
                            <div class="text-center mt-3"> <!-- Center the button horizontally -->
                                <div class="d-flex justify-content-center"> <!-- Center the button horizontally within its parent -->
                                    <button type="button" class="btn btn-fill-out reset" onclick="resetPassword()">Reset Password</button>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade " id="wallet" role="tabpanel" aria-labelledby="address-tab">
                            <div class="wallet-container">
                                <h2>Your Wallet</h2>
                                <div class="wallet-balance">
                                  <span>Wallet Balance:</span>
                                  <span id="walletBalance"><%= wallet ? wallet.walletBalance.toFixed(2) : '0.00' %></span>
                                </div>
                                <div class="transaction-history">
                                  <h3>Transaction History</h3>
                                  <table class="transaction-table">
                                    <thead>
                                      <tr>
                                        <th>Order</th>
                                        <th>Description</th>
                                        <th>Type</th>
                                        <th>Amount</th>
                                      </tr>
                                    </thead>
                                    <tbody id="transactionTableBody">
                                      <% if (wallet && wallet.transactions.length > 0) { %>
                                        <% wallet.transactions.forEach((transaction, index) => { %>
                                          <tr>
                                            <td><%= index + 1 %></td>
                                            <td><%= transaction.description %></td>
                                            <td><%= transaction.type %></td>
                                            <td>$<%= transaction.amount.toFixed(2) %></td>
                                          </tr>
                                        <% }); %>
                                      <% } else { %>
                                        <tr>
                                          <td colspan="4">No transactions found.</td>
                                        </tr>
                                      <% } %>
                                    </tbody>
                                  </table>
                                </div>
                              </div>
                          
                        </div>


                    </div>
                </div>
            </div>
        </div>
    </section>
</main>
<!-- SweetAlert CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10">

<!-- SweetAlert JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>


<script>

function saveUser() {
    console.log('changing user details')
    var name = document.getElementById('name').value;
    var email = document.getElementById('email').value;

    fetch(`/edit_details`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            name: name,
            email: email
        })
    })
    .then(response => {
        console.log('first .then')
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json(); // Parse response body as JSON
    })
    .then(data => {
        if (data.success) {
            console.log("SWEET ALERTT")
            // Show SweetAlert for success
            Swal.fire({
                icon: 'success',
                title: 'Updated successfully',
                showConfirmButton: true,
                timer: 1500
            }).then(() => {
                // Reload the page after alert
                window.location.reload();
            });
        } else {
            throw new Error('Update failed');
        }
    })
    .catch(error => {
        // Handle error
        console.error('There was a problem with the fetch operation:', error);
        // Optionally, show an alert for failure
        Swal.fire({
            icon: 'error',
            title: 'Update failed',
            text: error.message,
        });
    });
}

    

    function resetPassword() {
    let resetPasswordModal = new bootstrap.Modal(document.getElementById('resetPasswordModal'));
    resetPasswordModal.show();
    }

    function validateForm() {
    // Reset previous error messages
    document.querySelectorAll('.error-message').forEach(elem => elem.textContent = '');

    // Get input values
    const currentPassword = document.getElementById('currentPassword').value;
    const newPassword = document.getElementById('newPassword').value;
    const confirmPassword = document.getElementById('confirmPassword').value;

    let isValid = true;

    // Validation for empty fields
    if (currentPassword.trim() === '') {
        document.getElementById('currentPasswordError').textContent = 'Current password is required';
        isValid = false;
    }

    if (newPassword.trim() === '') {
        document.getElementById('newPasswordError').textContent = 'New password is required';
        isValid = false;
    } else if (!isStrongPassword(newPassword)) {
        document.getElementById('newPasswordError').textContent = 'Password must contain at least one uppercase letter, one lowercase letter, and one number';
        isValid = false;
    }

    if (confirmPassword.trim() === '') {
        document.getElementById('confirmPasswordError').textContent = 'Confirm password is required';
        isValid = false;
    } else if (newPassword !== confirmPassword) {
        document.getElementById('confirmPasswordError').textContent = 'Passwords do not match';
        isValid = false;
    }

    if (isValid) {
        // Call the function to confirm reset password
        confirmResetPassword();
    }
}

function isStrongPassword(password) {
    // Password must contain at least one uppercase letter, one lowercase letter, and one number
    const uppercaseRegex = /[A-Z]/;
    const lowercaseRegex = /[a-z]/;
    const numberRegex = /[0-9]/;

    return uppercaseRegex.test(password) && lowercaseRegex.test(password) && numberRegex.test(password);
}

function confirmResetPassword() {
    const currentPassword = document.getElementById('currentPassword').value;
    const newPassword = document.getElementById('newPassword').value;
    const confirmPassword = document.getElementById('confirmPassword').value;

    // Data to be sent in the request body
    const data = {
        currentPassword: currentPassword,
        newPassword: newPassword
    };

    fetch('/reset_password', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json(); // Parse response body as JSON
    })
    .then(data => {
        // Handle success response from the backend
         // Log the response data

        // Show SweetAlert for success
        if(data.success){
            Swal.fire({
            icon: 'success',
            title: 'Password reset successful',
            showConfirmButton: false,
            timer: 1500
        }).then(() => {
                // Hide the modal after the SweetAlert
                $('#resetPasswordModal').modal('hide');
                document.getElementById('resetPasswordForm').reset()

            });
        }else {
            // Handle other response errors here
            // For example, if there's an error message in the response
            Swal.fire({
                icon: 'error',
                title: 'Password reset failed',
                text: data.message || 'Unknown error occurred'
            }).then(() => {
                // Hide the modal after the SweetAlert
                $('#resetPasswordModal').modal('hide');
                document.getElementById('resetPasswordForm').reset()
                
            });
        }
        
    })
    .catch(error => {

       
        // Handle error
        console.error('There was a problem with the fetch operation:', error);
        
        // Show SweetAlert for failure
        Swal.fire({
            icon: 'error',
            title: 'Password reset failed',
            text: error.message
        }).then(() => {
                // Hide the modal after the SweetAlert
                $('#resetPasswordModal').modal('hide');
            });
    });
}

//--address validaiton-----//
function validateAddress() {
        // Reset previous error messages
        document.querySelectorAll('.error-message').forEach(elem => elem.textContent = '');

        // Get input values
        const houseName = document.getElementById('houseName').value.trim();
        const street = document.getElementById('street').value.trim();
        const city = document.getElementById('city').value.trim();
        const state = document.getElementById('state').value.trim();
        const country = document.getElementById('country').value.trim();
        const postalCode = document.getElementById('postalCode').value.trim();
        const phoneNo = document.getElementById('phoneNo').value.trim();
        const addressType = document.querySelector('input[name="addressType"]:checked');

        let isValid = true;

        // Validation for empty fields
        if (houseName === '') {
            document.getElementById('houseNameError').textContent = 'House Name is required';
            isValid = false;
        }

        if (street === '') {
            document.getElementById('streetError').textContent = 'Street is required';
            isValid = false;
        }

        if (city === '') {
            document.getElementById('cityError').textContent = 'City is required';
            isValid = false;
        }
        if (state === '') {
            document.getElementById('stateError').textContent = 'State is required';
            isValid = false;
        }

        if (country === '') {
            document.getElementById('countryError').textContent = 'Country is required';
            isValid = false;
        }

        // Validation for postal code (should be exactly 6 digits)
        if (!/^\d{6}$/.test(postalCode)) {
            document.getElementById('postalCodeError').textContent = 'Postal Code should contain 6 digits';
            isValid = false;
        }

        // Validation for phone number (should be exactly 10 digits)
        if (!/^\d{10}$/.test(phoneNo)) {
            document.getElementById('phoneNoError').textContent = 'Phone No should contain 10 digits';
            isValid = false;
        }

        // Validation for address type
        if (!addressType) {
            document.getElementById('addressTypeError').textContent = 'Please select Address Type';
            isValid = false;
        }
        if (isValid) {
        // Data to be sent in the request body
        const data = {
            houseName: houseName,
            street: street,
            city: city,
            state:state,
            country: country,
            postalCode: postalCode,
            phoneNo: phoneNo,
            addressType: addressType.value
        };

        // Perform fetch operation
        fetch('/add_address', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json(); // Parse response body as JSON
        })
        .then(data => {
            if(data.success){
            Swal.fire({
            icon: 'success',
            title: 'Address Added Succesfully',
            showConfirmButton: false,
            timer: 1500
        }).then(() => {
                // Hide the modal after the SweetAlert
                $('#addAddressModal').modal('hide');
                document.getElementById('addAddressForm').reset()
                location.reload()

            });
           
        }else {
            // Handle other response errors here
            // For example, if there's an error message in the response
            Swal.fire({
                icon: 'error',
                title: 'Adding Address failed',
                text: data.message || 'Unknown error occurred'
            }).then(() => {
                // Hide the modal after the SweetAlert
                $('#addAddressModal').modal('hide');
                document.getElementById('addAddressForm').reset()
                location.reload()
            });
           
        }
        })
        .catch(error => {
            // Handle error
            console.error('There was a problem with the fetch operation:', error);
            // Optionally, show an alert for failure
            alert('Address addition failed: ' + error.message);
        });
        
    }
    }

    //populateEdit Modal
    function populateEditForm(addressId, houseName, street, city, state, country, postalCode, phoneNumber, type) {
    console.log(addressId)
    document.getElementById('addressId').value = addressId;    
    document.getElementById('editHouseName').value = houseName;
    document.getElementById('editStreet').value = street;
    document.getElementById('editCity').value = city;
    document.getElementById('editState').value = state;
    document.getElementById('editCountry').value = country;
    document.getElementById('editPostalCode').value = postalCode;
    document.getElementById('editPhoneNo').value = phoneNumber;
    
    if (type === 'office') {
        document.getElementById('editOffice').checked = true;
    } else if (type === 'home') {
        document.getElementById('editHome').checked = true;
    }
}

//fetch operation for address update
function updateAddress() {
    // Gather data from the form fields
    const addressId=document.getElementById('addressId').value;
    const houseName = document.getElementById('editHouseName').value;
    const street = document.getElementById('editStreet').value;
    const city = document.getElementById('editCity').value;
    const state = document.getElementById('editState').value;
    const country = document.getElementById('editCountry').value;
    const postalCode = document.getElementById('editPostalCode').value;
    const phoneNumber = document.getElementById('editPhoneNo').value;
    const addressType = document.querySelector('input[name="editAddressType"]:checked').value;
    
    // Prepare data to send to the backend
    const data = {
        houseName: houseName,
        street: street,
        city: city,
        state: state,
        country: country,
        postalCode: postalCode,
        phoneNumber: phoneNumber,
        addressType: addressType,
        id:addressId
    };

    // Perform a fetch operation to the backend
    fetch('/edit_address', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            // Show SweetAlert for success
            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: 'Address Updated'
            }).then(() => {
                // Hide the modal after the SweetAlert
                $('#editAddressModal').modal('hide');
                document.getElementById('addAddressForm').reset()
                location.reload()

            });
        } else {
            // Show SweetAlert for failure
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Failed to update address'
            });
        }
    })
    .catch(error => {
        console.error('Error:', error);
    });
}

// delete address sweet alert and fetch operation
function confirmDelete(addressId) {
        Swal.fire({
            title: 'Are you sure?',
            text: 'Are you sure about deleting the address?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                // Perform fetch operation to delete address
                fetch(`/delete_address?id=${addressId}`, {
                    method: 'POST'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire('Deleted!', 'The address has been deleted.', 'success').then(() => {
                // Hide the modal after the SweetAlert
                location.reload()

            });
                        // Optional: You can reload the page or update the UI as needed
                    } else {
                        Swal.fire('Error!', 'Failed to delete the address.', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire('Error!', 'An error occurred while deleting the address.', 'error');
                });
            }
        });
    }



</script>

</body>
<%- include('../partials/userFooter.ejs') %>